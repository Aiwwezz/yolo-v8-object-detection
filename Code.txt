import cv2
import torch
import numpy as np
from ultralytics import YOLO

# โหลดโมเดลที่เทรนไว้
model = YOLO("C:/Users/Aiwee/runs/detect/train/weights/best.pt")

# โหลดวิดีโอที่ต้องการทดสอบ
video_path = "C:/Users/Aiwee/runs/Video/test.mp4"
cap = cv2.VideoCapture(video_path)

# บันทึกวิดีโอไปที่ตำแหน่งที่ต้องการ
output_path = "C:/Users/Aiwee/runs/detect/predict/output.mp4"
frame_width = int(cap.get(3))
frame_height = int(cap.get(4))
fps = int(cap.get(cv2.CAP_PROP_FPS))
out = cv2.VideoWriter(output_path, cv2.VideoWriter_fourcc(*"mp4v"), fps, (frame_width, frame_height))

# ค่าต่าง ๆ
model_accuracy = 0.85  # Accuracy ของโมเดล
person_count = 0
tracked_people = set()  # ใช้ `set()` เก็บ ID ของคนที่นับไปแล้ว

while cap.isOpened():
    ret, frame = cap.read()
    if not ret:
        break

    # ใช้ model.track() เพื่อเปิดการติดตาม (persist=True ให้จำ ID คนที่เคยเจอ)
    results = model.track(frame, persist=True, verbose=False)

    for r in results:
        for box in r.boxes:
            x1, y1, x2, y2 = map(int, box.xyxy[0])  # ตำแหน่งกล่อง
            conf = box.conf[0].item()  # ค่า confidence
            cls = int(box.cls[0])  # class index
            track_id = int(box.id[0]) if box.id is not None else None  # ID ของแต่ละบุคคล

            if cls == 0 and conf > 0.5 and track_id is not None:  # ถ้าเป็น "person"
                if track_id not in tracked_people:
                    person_count += 1  # เพิ่มจำนวนคนที่ตรวจจับได้
                    tracked_people.add(track_id)  # เก็บ track_id ที่นับไปแล้ว

                # วาดกรอบรอบคน
                cv2.rectangle(frame, (x1, y1), (x2, y2), (0, 255, 0), 2)
                cv2.putText(frame, f"Person {conf:.2f}", (x1, y1 - 10), cv2.FONT_HERSHEY_SIMPLEX, 0.5, (0, 255, 0), 2)

    # แสดงจำนวนคนที่ตรวจจับได้
    cv2.putText(frame, f"People Count: {person_count}", (50, 50), cv2.FONT_HERSHEY_SIMPLEX, 1, (0, 0, 255), 2)
    cv2.putText(frame, f"Model Accuracy: {model_accuracy * 100:.2f}%", (50, 100), cv2.FONT_HERSHEY_SIMPLEX, 1,
                (255, 0, 0), 2)

    out.write(frame)
    cv2.imshow("YOLO Detection", frame)

    if cv2.waitKey(1) & 0xFF == ord("q"):
        break

cap.release()
out.release()
cv2.destroyAllWindows()
